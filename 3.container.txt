컨테이너 생성/실행
# 로컬에 이미지가 없는 경우 docker hub 에서 이미지를 자동으로 다운로드

# 최신 버전 이미지로 컨테이너 생성
$ docker create <image-name>

# 특정 버전 이미지로 컨테이너 생성
$ docker create <image-name>:<tag-name>

# 컨테이너 실행
$ docker start <container-name or container-id>...

# 최신 버전 이미지로 컨테이너 생성 및 실행
$ docker run <image-name>

# 특정 버전 이미지로 컨테이너 생성 및 실행
$ docker run <image-name>:<tag-name>

# -d : 백그라운드 실행
# -p : 포트 맵핑
# --name : 이미지 이름 지정
$ docker run -d -p <host-ip>:<container-ip> --name <your-image-name> <image-name>

컨테이너 조회

# 실행 중인 컨테이너 조회
$ docker ps

# 모든 컨테이너 조회
$ docker ps -a

# 컨테이너 로그 출력
$ docker logs <container-name or container-id>

# 컨테이너 로그 최근 n줄만 출력
$ docker logs --tail <row_amount> <container-name or container-id>

# 기존 로그와 함께 실시간 로그 출력
$ docker logs -f <container-name or container-id>

# 기존 로그 제외 실시간 로그 출력
$ docker logs --tail 0 -f <container-name or container-id>

컨테이너 접속

# 컨테이너 접속
$ docker exec -it <container-name or container-id> bash

컨테이너 중지/삭제

# 컨테이너 중지
$ docker stop <container-name or container-id>...

# 컨테이너 삭제
$ docker rm <container-name or container-id>...

# 중지된 컨테이너 전체 삭제
$ docker rm $(docker ps -qa)

# 컨테이너 중지 및 삭제
$ docker rm -f <container-name or container-id>...

# 컨테이너 전체 중지 및 삭제
$ docker rm -f $(docker ps -qa)

# 컨테이너 강제 중지
$ docker kill <container-name or container-id>...
